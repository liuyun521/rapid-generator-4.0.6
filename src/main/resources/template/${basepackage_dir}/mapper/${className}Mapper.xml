<#include "/macro.include"/>
<#assign className = table.className>   
<#assign classNameFirstLower = table.classNameFirstLower>   
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<#macro mapperEl value>${r"#{"}${value}}</#macro>
<#macro mapperEl2 value>${r"#{item."}${value}}</#macro>
<#macro mapperItem value>${r"         #{id,jdbcType="}${value}}</#macro>
<#macro limit>${r"        LIMIT #{page.offset},#{page.limit}"}</#macro>
<#macro namespace>${className}.</#macro>

<mapper namespace="${basepackage}.core.dao.system.${className}Dao">

	<resultMap id="${className}Map" type="${basepackage}.domain.model.system.${className}VO">
        <#list table.pkColumns as column>
        <id property="${column.columnNameLower}" column="${column.sqlName}" />
		</#list>
        <#list table.notPkColumns as column>
        <result property="${column.columnNameLower}" column="${column.sqlName}" />
		</#list>
	</resultMap>
	
	<!-- 所有列 -->
	<sql id="allColumns">
	    <#list table.columns as column>
	    ${column.sqlName}<#if column_has_next>,</#if>
	    </#list>
	</sql>
	
	<!-- 共用的查询条件 -->
	<sql id="where">
        <where>
           <#list table.columns as column>
           <#if column.columnNameLower!='createId'&&column.columnNameLower!='createDate'
			&&column.columnNameLower!='createDate'&&column.columnNameLower!='updateId'
			&&(column.sqlTypeName!='BIGINT'&&column.sqlTypeName!='TINYINT'&&column.sqlTypeName!='INT')
			&&column.columnNameLower!='updateDate'&&column.columnNameLower!='deleteFlat'&&column.columnNameLower!='orderNum'>
			
           	<if test="param.${column.columnNameFirstLower} neq null and param.${column.columnNameFirstLower} neq ''">
                AND ${column.sqlName} = param.${column.columnNameFirstLower}
            </if>
            </#if>
           </#list>            
        </where>
    </sql>
	
	<!-- 根据唯一id获取实体对象 -->
    <select id="getById" resultMap="${className}Map">
		SELECT 
			<include refid="allColumns" />
	    FROM ${table.sqlName} 
        WHERE 
			<#list table.compositeIdColumns as column>
	        ${column.sqlName} = <@mapperEl 'id'/> <#if column_has_next>,</#if>
	        </#list>    
	</select>
	
	<!-- 根据查询参数获取数据总行数 -->
	<select id="countByParam" resultType="long">
        SELECT count(0) 
		FROM ${table.sqlName} 
		<include refid="where"/>    
    </select>
    
	
	<!-- 根据查询参数分页获取数据集合 -->
	<select id="findPageByParam" resultMap="${className}Map">
        SELECT
            <include refid="allColumns" />
        FROM
            ${table.sqlName} 
        <include refid="where"/>
        <@limit/>
        
    </select>
  
    
    <!-- 批量修改信息 -->
    <update id="update">
       	UPDATE
               ${table.sqlName}
           <set>
               <#list table.notPkColumns as column>
               <if test="${column.columnNameFirstLower} neq null">
               	 ${column.sqlName} = <@mapperEl column.columnNameFirstLower/> <#if column_has_next>,</#if>
               </if>
               </#list>
           </set>
           WHERE
               <#list table.compositeIdColumns as column>
               ${column.sqlName} = <@mapperEl '${column.columnNameLower}'/> <#if column_has_next> AND </#if>
               </#list>
    </update>
    
    <!-- 批量插入数据 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="${table.idColumn.columnNameFirstLower}">
        INSERT INTO ${table.sqlName} (
          <#list table.columns as column>
          ${column.sqlName}<#if column_has_next>,</#if>
          </#list>
        ) VALUES 
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
        <#list table.columns as column>
          <@mapperEl column.columnNameFirstLower/><#if column_has_next>,</#if>
        </#list>
        </foreach>
    </insert>
    
    <!-- 批量删除信息 -->
    <delete id="deleteByIds">
		UPDATE ${table.sqlName} 
		  SET delete_flag=1
		WHERE
        <#list table.compositeIdColumns as column>
        ${column.sqlName} in 
        <foreach collection="list" item="id" index="index" separator="," open="(" close=")">
               	 <@mapperItem column.sqlTypeName/>
               	 
        </foreach>
        </#list>
    </delete>
</mapper>

